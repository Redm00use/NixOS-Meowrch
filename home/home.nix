# ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
# ‚ïë                                                                          ‚ïë
# ‚ïë                     –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª Home-Manager                   ‚ïë
# ‚ïë                         –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è NixOS 25.05                    ‚ïë
# ‚ïë                                                                          ‚ïë
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

{ config, pkgs, lib, inputs, firefox-addons, meowrch-scripts, meowrch-themes, ... }:

{
  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                         –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Home Manager                   ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  home.username = lib.mkForce "meowrch";
  home.homeDirectory = lib.mkForce "/home/meowrch";
  home.stateVersion = "25.05";

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                               Overlays                                   ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  # nixpkgs.overlays = [
  #   # Overlay –¥–ª—è Spicetify (–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω)
  #   # inputs.spicetify-nix.overlays.default
  # ];

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                           –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã                        ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  home.packages = with pkgs; [
    # --- –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∞ ---
    # inputs.yandex-music.packages.${pkgs.system}.default  # Temporarily disabled for syntax check

    # --- Zen Browser ---
    inputs.zen-browser.packages.${pkgs.system}.default

    # --- –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –∏ —Ç–µ–º—ã ---
    # meowrch-scripts  # Temporarily disabled due to build issues
    # meowrch-themes   # Temporarily disabled due to build issues

    # --- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    # –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–∏ –ø–∞–∫–µ—Ç—ã
  ];

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                               Fish Shell                                 ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  programs.fish = {
    enable = true;

    # --- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∞–ª–∏–∞—Å—ã –¥–ª—è NixOS ---
    shellAliases = {
      # === –£–ü–†–ê–í–õ–ï–ù–ò–ï NIXOS ===
      # –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
      rebuild = "sudo NIXPKGS_ALLOW_UNFREE=1 nixos-rebuild switch --flake .#meowrch --impure";
      b = "rebuild";  # –∫–æ—Ä–æ—Ç–∫–∏–π –∞–ª–∏–∞—Å

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
      check = "sudo nixos-rebuild dry-build --flake .#meowrch";
      test = "sudo nixos-rebuild test --flake .#meowrch";

      # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
      update = "cd /home/meowrch/NixOS-25.05 && nix flake update && rebuild";
      u = "update";  # –∫–æ—Ä–æ—Ç–∫–∏–π –∞–ª–∏–∞—Å

      # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      validate = "cd /home/meowrch/NixOS-25.05 && ./validate-config.sh";

      # === –£–ü–†–ê–í–õ–ï–ù–ò–ï NIX ===
      # –û—á–∏—Å—Ç–∫–∞ –º—É—Å–æ—Ä–∞
      cleanup = "sudo nix-collect-garbage -d && nix-collect-garbage -d";
      clean = "cleanup";
      dell = "cleanup";  # –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∞–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

      # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è store
      optimize = "sudo nix-store --optimise";

      # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–∫–æ–ª–µ–Ω–∏—è
      generations = "sudo nix-env --list-generations --profile /nix/var/nix/profiles/system";
      gens = "generations";

      # –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –ø–æ–∫–æ–ª–µ–Ω–∏—é
      rollback = "sudo nixos-rebuild switch --rollback";

      # === HOME MANAGER ===
      # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Home Manager
      home = "home-manager switch --flake .#meowrch";
      hm = "home";

      # –ü–æ–∫–æ–ª–µ–Ω–∏—è Home Manager
      home-gens = "home-manager generations";

      # === –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ===
      # –û—Ç–∫—Ä—ã—Ç—å –∫–æ–Ω—Ñ–∏–≥ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
      config = "cd /home/meowrch/NixOS-25.05 && zed .";
      c = "config";

      # –ë—ã—Å—Ç—Ä–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      edit-config = "zed /home/meowrch/NixOS-25.05/configuration.nix";
      edit-home = "zed /home/meowrch/NixOS-25.05/home/home.nix";
      edit-flake = "zed /home/meowrch/NixOS-25.05/flake.nix";

      # === –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï ===
      # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      sysinfo = "fastfetch";
      f = "sysinfo";

      # –í–µ—Ä—Å–∏–∏ –∏ —Å—Ç–∞—Ç—É—Å
      nixos-version = "nixos-version";
      nix-version = "nix --version";

      # –†–∞–∑–º–µ—Ä Nix store
      store-size = "du -sh /nix/store";

      # === –ü–û–ò–°–ö –ò –ü–ê–ö–ï–¢–´ ===
      # –ü–æ–∏—Å–∫ –ø–∞–∫–µ—Ç–æ–≤
      search = "nix search nixpkgs";
      find-pkg = "search";

      # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–∫–µ—Ç–µ
      pkg-info = "nix show-derivation";

      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ
      try = "nix shell nixpkgs#";

      # === FLAKE –ö–û–ú–ê–ù–î–´ ===
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ flake
      flake-check = "nix flake check";
      flake-show = "nix flake show";
      flake-update = "nix flake update";

      # === –°–ò–°–¢–ï–ú–ù–´–ï –ö–û–ú–ê–ù–î–´ ===
      # –ñ—É—Ä–Ω–∞–ª—ã
      logs = "journalctl -xe";
      logs-boot = "journalctl -b";
      logs-hypr = "journalctl --user -u hyprland";

      # –°–µ—Ä–≤–∏—Å—ã
      services = "systemctl list-units --type=service";
      user-services = "systemctl --user list-units --type=service";

      # === –§–ê–ô–õ–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê ===
      ll = "ls -la --color=auto";
      la = "ls -la --color=auto";
      l = "ls -l --color=auto";
      ls = "ls --color=auto";

      # –ù–∞–≤–∏–≥–∞—Ü–∏—è
      ".." = "cd ..";
      "..." = "cd ../..";
      "...." = "cd ../../..";

      # –£—Ç–∏–ª–∏—Ç—ã
      cls = "clear";
      grep = "grep --color=auto";

      # === GIT –°–û–ö–†–ê–©–ï–ù–ò–Ø ===
      g = "git";
      gs = "git status";
      ga = "git add";
      gaa = "git add --all";
      gc = "git commit";
      gcm = "git commit -m";
      gp = "git push";
      gpl = "git pull";
      gco = "git checkout";
      gb = "git branch";
      gd = "git diff";
      gl = "git log --oneline";

      # === –ë–´–°–¢–†–´–ï –ö–û–ú–ê–ù–î–´ ===
      # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ
      reboot = "sudo systemctl reboot";
      shutdown = "sudo systemctl poweroff";

      # –°–µ—Ç—å
      ip = "ip --color=auto";
      ping = "ping -c 4";

      # –ü—Ä–æ—Ü–µ—Å—Å—ã
      ps = "ps aux";
      top = "btop";

      # –î–∏—Å–∫–∏
      df = "df -h";
      du = "du -sh";

      # === –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï MEOWRCH –ö–û–ú–ê–ù–î–´ ===
      # –°–º–µ–Ω–∞ —Ç–µ–º—ã
      theme = "python ~/.config/meowrch/meowrch.py --action select-theme";
      wallpaper = "python ~/.config/meowrch/meowrch.py --action select-wallpaper";

      # –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      cd-config = "cd /home/meowrch/NixOS-25.05";
      cd-home = "cd /home/meowrch/NixOS-25.05/home";
      cd-modules = "cd /home/meowrch/NixOS-25.05/modules";
    };

    # --- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---
    functions = {
      # wget —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π XDG_DATA_HOME
      wget = ''
        command wget --hsts-file="$XDG_DATA_HOME/wget-hsts" $argv
      '';

      # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
      ff = ''
        find . -type f -name "*$argv*" 2>/dev/null
      '';

      # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
      mkcd = ''
        mkdir -p $argv[1] && cd $argv[1]
      '';

      # === –†–ê–°–®–ò–†–ï–ù–ù–´–ï NIXOS –§–£–ù–ö–¶–ò–ò ===

      # –£–º–Ω—ã–π rebuild —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
      smart-rebuild = ''
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        if ./validate-config.sh
          echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞. –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É..."
          sudo NIXPKGS_ALLOW_UNFREE=1 nixos-rebuild switch --flake .#meowrch --impure
        else
          echo "‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –°–±–æ—Ä–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
        end
      '';

      # Backup –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
      backup-config = ''
        set backup_dir "/home/meowrch/config-backups"
        set timestamp (date '+%Y%m%d_%H%M%S')
        set backup_name "nixos-config-$timestamp"

        mkdir -p $backup_dir
        cp -r /home/meowrch/NixOS-25.05 "$backup_dir/$backup_name"
        echo "üì¶ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $backup_dir/$backup_name"
      '';

      # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
      system-size = ''
        echo "üìä –†–∞–∑–º–µ—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã:"
        echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
        echo "‚îÇ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç       ‚îÇ –†–∞–∑–º–µ—Ä       ‚îÇ"
        echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
        printf "‚îÇ Nix Store       ‚îÇ %12s ‚îÇ\n" (du -sh /nix/store 2>/dev/null | cut -f1)
        printf "‚îÇ Boot            ‚îÇ %12s ‚îÇ\n" (du -sh /boot 2>/dev/null | cut -f1)
        printf "‚îÇ Home            ‚îÇ %12s ‚îÇ\n" (du -sh /home 2>/dev/null | cut -f1)
        printf "‚îÇ Var             ‚îÇ %12s ‚îÇ\n" (du -sh /var 2>/dev/null | cut -f1)
        echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
      '';

      # –ê–Ω–∞–ª–∏–∑ –ø–æ–∫–æ–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã
      generation-size = ''
        echo "üìà –ê–Ω–∞–ª–∏–∑ –ø–æ–∫–æ–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã:"
        sudo nix-env --list-generations --profile /nix/var/nix/profiles/system | while read gen
          set gen_num (echo $gen | awk '{print $1}')
          if test -n "$gen_num" -a "$gen_num" != "Generation"
            set gen_path "/nix/var/nix/profiles/system-$gen_num-link"
            if test -L $gen_path
              set size (du -sh $gen_path 2>/dev/null | cut -f1)
              printf "–ü–æ–∫–æ–ª–µ–Ω–∏–µ %s: %s\n" $gen_num $size
            end
          end
        end
      '';

      # –ü–æ–∏—Å–∫ –ø–∞–∫–µ—Ç–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
      pkg-search = ''
        if test (count $argv) -eq 0
          echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: pkg-search <–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–∞–∫–µ—Ç–∞>"
          return 1
        end

        echo "üîç –ü–æ–∏—Å–∫ –ø–∞–∫–µ—Ç–∞: $argv[1]"
        nix search nixpkgs $argv[1] | head -20
      '';

      # –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
      quick-install = ''
        if test (count $argv) -eq 0
          echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: quick-install <–ø–∞–∫–µ—Ç1> [–ø–∞–∫–µ—Ç2] ..."
          return 1
        end

        echo "‚ö° –í—Ä–µ–º–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞: $argv"
        nix shell nixpkgs#$argv[1]
      '';

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
      service-status = ''
        echo "üîß –°—Ç–∞—Ç—É—Å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
        echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
        echo "‚îÇ –°–µ—Ä–≤–∏—Å              ‚îÇ –°—Ç–∞—Ç—É—Å       ‚îÇ"
        echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"

        set services "pipewire" "bluetooth" "networkmanager" "sddm"
        for service in $services
          set status (systemctl is-active $service 2>/dev/null)
          if test "$status" = "active"
            set status_icon "‚úÖ"
          else
            set status_icon "‚ùå"
          end
          printf "‚îÇ %-19s ‚îÇ %s %-10s ‚îÇ\n" $service $status_icon $status
        end
        echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
      '';

      # –õ–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–±–æ—Ä–∫–∏
      build-logs = ''
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–±–æ—Ä–∫–∏ NixOS:"
        journalctl -u nixos-rebuild --since "1 hour ago" --no-pager | tail -50
      '';

      # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –º–µ–∂–¥—É –ø–æ–∫–æ–ª–µ–Ω–∏—è–º–∏
      diff-generations = ''
        if test (count $argv) -lt 2
          echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: diff-generations <–ø–æ–∫–æ–ª–µ–Ω–∏–µ1> <–ø–æ–∫–æ–ª–µ–Ω–∏–µ2>"
          echo "–ü—Ä–∏–º–µ—Ä: diff-generations 1 2"
          return 1
        end

        set gen1 $argv[1]
        set gen2 $argv[2]
        echo "üîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–∫–æ–ª–µ–Ω–∏–π $gen1 –∏ $gen2:"
        sudo nix store diff-closures /nix/var/nix/profiles/system-$gen1-link /nix/var/nix/profiles/system-$gen2-link
      '';

      # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–±–æ—Ä–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
      watch-build = ''
        echo "üëÅÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–±–æ—Ä–∫–∏ NixOS –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
        echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
        journalctl -u nixos-rebuild -f
      '';

      # –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
      system-health = ''
        echo "üè• –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã:"
        echo ""
        echo "üíæ –ü–∞–º—è—Ç—å:"
        free -h | head -2
        echo ""
        echo "üíø –î–∏—Å–∫–∏:"
        df -h | grep -E '^(/dev/|Filesystem)'
        echo ""
        echo "üî• –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:"
        sensors 2>/dev/null | grep -E '(Core|temp)' | head -5 || echo "  sensors –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo ""
        echo "‚ö° –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã:"
        uptime
        echo ""
        echo "üîß –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:"
        journalctl -p err --since "1 hour ago" --no-pager | tail -5
      '';
    };

    # --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –æ–±–æ–ª–æ—á–∫–∏ ---
    interactiveShellInit = ''
      set fish_greeting ""

      # –î–æ–±–∞–≤–∏—Ç—å ~/.local/bin –≤ PATH, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if not contains -- "$HOME/.local/bin" $fish_user_paths
          set -p fish_user_paths "$HOME/.local/bin"
      end

      # –î–æ–±–∞–≤–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ PATH
      if not contains -- "$HOME/.config/meowrch/bin" $fish_user_paths
          set -p fish_user_paths "$HOME/.config/meowrch/bin"
      end

      # –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
      fastfetch
    '';
  };

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                              Starship Prompt                             ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  programs.starship = {
    enable = true;
    enableFishIntegration = true;

    settings = {
      format = "$all$character";

      character = {
        success_symbol = "[‚ûú](bold green)";
        error_symbol = "[‚ûú](bold red)";
      };

      directory = {
        style = "bold cyan";
        truncation_length = 3;
        truncate_to_repo = false;
      };

      git_branch = {
        style = "bold purple";
      };

      nix_shell = {
        format = "via [$symbol$state]($style) ";
        symbol = "‚ùÑÔ∏è ";
        style = "bold blue";
      };
    };
  };

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                        –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è                              ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  home.sessionVariables = {
    # Wayland support
    MOZ_ENABLE_WAYLAND = "1";
    SDL_VIDEODRIVER = "wayland";
    QT_QPA_PLATFORM = "wayland";

    # Default applications
    EDITOR = "zed";
    VISUAL = "zed";
    BROWSER = "firefox";
    TERMINAL = "kitty";

    # Development
    NIXPKGS_ALLOW_UNFREE = "1";
  };

  # (Git configuration block intentionally removed; git package can still be installed via system packages)

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                                Spicetify                                 ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  programs.spicetify = {
    enable = true;
    # –¢–µ–º–∞ Catppuccin –¥–ª—è Spicetify
    theme = inputs.spicetify-nix.legacyPackages.${pkgs.system}.themes.catppuccin;
    colorScheme = "mocha";

    enabledExtensions = with inputs.spicetify-nix.legacyPackages.${pkgs.system}.extensions; [
      adblock
      hidePodcasts
      shuffle
    ];
  };

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                              Catppuccin Theme                            ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  catppuccin = {
    enable = true;
    flavor = "mocha";
    accent = "blue";

    # Disable problematic starship theming
    starship.enable = false;
  };

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                              Firefox                                     ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  programs.firefox = {
    enable = true;

    profiles.default = {
      id = 0;
      isDefault = true;

      extensions = {
        packages = with firefox-addons.packages.${pkgs.system}; [
          ublock-origin
          bitwarden
          privacy-badger
          decentraleyes
          clearurls
        ];
      };

      settings = {
        # Privacy and security
        "privacy.trackingprotection.enabled" = true;
        "privacy.trackingprotection.socialtracking.enabled" = true;
        "privacy.donottrackheader.enabled" = true;

        # Performance
        "gfx.webrender.all" = true;
        "media.ffmpeg.vaapi.enabled" = true;
        "media.hardware-video-decoding.enabled" = true;

        # Wayland
        "widget.use-xdg-desktop-portal.file-picker" = 1;
        "widget.use-xdg-desktop-portal.mime-handler" = 1;
      };
    };
  };

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                                  Kitty                                   ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  programs.kitty = {
    enable = true;

    settings = {
      # Font configuration
      font_family = "JetBrainsMono Nerd Font";
      font_size = 12;

      # Window layout
      remember_window_size = false;
      initial_window_width = 1200;
      initial_window_height = 800;

      # Colors will be set by Catppuccin

      # Performance
      repaint_delay = 10;
      input_delay = 3;
      sync_to_monitor = true;

      # Wayland settings
      wayland_titlebar_color = "system";
      linux_display_server = "wayland";

      # Scrollback
      scrollback_lines = 10000;

      # URLs
      url_style = "curly";
      open_url_with = "default";

      # Bell
      enable_audio_bell = false;
      visual_bell_duration = 0.0;

      # Window settings
      confirm_os_window_close = 0;
      background_opacity = 0.95;
    };

    keybindings = {
      "ctrl+shift+enter" = "new_window";
      "ctrl+shift+t" = "new_tab";
      "ctrl+shift+q" = "close_window";
      "ctrl+shift+w" = "close_tab";
      "ctrl+shift+r" = "start_resizing_window";
      "ctrl+shift+l" = "next_layout";
      "ctrl+shift+equal" = "increase_font_size";
      "ctrl+shift+minus" = "decrease_font_size";
      "ctrl+shift+backspace" = "restore_font_size";
    };
  };

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                              Zed Editor                                  ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

  # Zed config file
  home.file.".config/zed/settings.json".text = builtins.toJSON {
    # Theme
    theme = "Catppuccin Mocha";

    # UI Settings
    ui_font_size = 14;
    buffer_font_size = 14;
    buffer_font_family = "JetBrainsMono Nerd Font";
    ui_font_family = "JetBrainsMono Nerd Font";

    # Editor settings
    tab_size = 2;
    soft_wrap = "editor_width";
    show_whitespaces = "all";
    relative_line_numbers = true;
    cursor_blink = true;

    # Git integration
    git.git_gutter = "tracked_files";
    git.inline_blame.enabled = true;

    # Language settings
    languages = {
      Nix = {
        language_servers = ["nil"];
        formatter = "alejandra";
      };
    };

    # Terminal
    terminal = {
      font_family = "JetBrainsMono Nerd Font";
      font_size = 14;
    };

    # Auto save
    autosave = "on_focus_change";
    format_on_save = "on";

    # File tree
    project_panel = {
      dock = "left";
      default_width = 240;
    };

    # Vim mode (optional)
    vim_mode = false;

    # Assistant (disable if not needed)
    assistant = {
      enabled = false;
    };
  };

  # Zed keymap file
  home.file.".config/zed/keymap.json".text = builtins.toJSON [
    {
      context = "Editor";
      bindings = {
        "ctrl-/" = "editor::ToggleComments";
        "ctrl-d" = "editor::SelectNext";
        "ctrl-shift-k" = "editor::DeleteLine";
        "ctrl-shift-d" = "editor::DuplicateLine";
        "ctrl-p" = "file_finder::Toggle";
        "ctrl-shift-p" = "command_palette::Toggle";
        "ctrl-shift-f" = "search::ToggleReplace";
        "ctrl-`" = "terminal_panel::ToggleFocus";
      };
    }
  ];

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                              Dotfiles                                    ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

  # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
  home.file.".local/bin/.keep".text = "";
  home.file.".config/meowrch/.keep".text = "";

  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ Home Manager
  programs.home-manager.enable = true;

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                            Systemd Services                              ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

  systemd.user.services = {
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ wallpaper (–µ—Å–ª–∏ –µ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç—ã)
    wallpaper-changer = {
      Unit = {
        Description = "Random wallpaper changer";
        After = [ "graphical-session-pre.target" ];
        PartOf = [ "graphical-session.target" ];
      };

      Service = {
        Type = "oneshot";
        ExecStart = "${pkgs.bash}/bin/bash -c 'if [ -x $HOME/.config/meowrch/bin/change-wallpaper.sh ]; then $HOME/.config/meowrch/bin/change-wallpaper.sh; fi'";
      };

      Install = {
        WantedBy = [ "default.target" ];
      };
    };
  };

  # ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  # ‚ïë                                 XDG                                      ‚ïë
  # ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

  xdg = {
    enable = true;

    userDirs = {
      enable = true;
      createDirectories = true;

      desktop = "$HOME/Desktop";
      documents = "$HOME/Documents";
      download = "$HOME/Downloads";
      music = "$HOME/Music";
      pictures = "$HOME/Pictures";
      videos = "$HOME/Videos";
      templates = "$HOME/Templates";
      publicShare = "$HOME/Public";
    };

    mimeApps = {
      enable = true;
      defaultApplications = {
        "text/html" = [ "firefox.desktop" ];
        "x-scheme-handler/http" = [ "firefox.desktop" ];
        "x-scheme-handler/https" = [ "firefox.desktop" ];
        "x-scheme-handler/about" = [ "firefox.desktop" ];
        "x-scheme-handler/unknown" = [ "firefox.desktop" ];
        "application/pdf" = [ "firefox.desktop" ];
        "image/jpeg" = [ "feh.desktop" ];
        "image/png" = [ "feh.desktop" ];
        "image/gif" = [ "feh.desktop" ];
        "video/mp4" = [ "mpv.desktop" ];
        "video/x-matroska" = [ "mpv.desktop" ];
        "audio/mpeg" = [ "mpv.desktop" ];
        "audio/flac" = [ "mpv.desktop" ];
      };
    };
  };
}
